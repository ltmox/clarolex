{# filepath: templates/transcription/result.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Transcripción{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/ansi_up@5.0.1/ansi_up.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        .transcription-output {
            background: #1e1e1e;
            padding: 20px;
            border-radius: 5px;
            color: white;
            font-family: monospace;
            white-space: pre-wrap; /* Mantiene los saltos de línea */
        }
        .timestamp {
            display: inline-block;
            width: 150px; /* Ajusta el ancho según sea necesario */
            text-align: left;
            vertical-align: top;
        }
        .audio-timestamp {
            font-family: monospace;
            margin-top: 10px;
        }
        .btn-download {
            font-size: 1.5rem;
            background-color: #28a745;
            border-color: #28a745;
            color: white;
        }
        .btn-download i {
            margin-right: 5px;
        }
        .btn-container {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }
        .audio-player {
            width: 100%; /* Ajusta el ancho según sea necesario */
        }
    </style>
{% endblock %}

{% block body %}
    <div class="container mt-4">
        <h2>Resultado de la Transcripción</h2>
        
        <div id="transcription-output" class="transcription-output">
        </div>

        <h3 class="mt-4">Texto Limpio</h3>
        <textarea id="clean-text" class="form-control" rows="10"></textarea>

        <h3 class="mt-4">Audio Original</h3>
        <audio id="audio-player" class="audio-player" controls>
            <source src="{{ audioPath }}" type="audio/wav">
            Tu navegador no soporta el elemento de audio.
        </audio>
        <div id="audio-timestamp" class="audio-timestamp">00:00:00.00</div>

        <div class="btn-container">
            <button id="download-btn" class="btn btn-download mt-3">
                <i class="fas fa-download"></i> Descargar transcripción
            </button>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const ansiUp = new AnsiUp();
            const colorOutput = `{{ colorOutput|raw|replace({"\n": "\\n"}) }}`;
            const htmlOutput = ansiUp.ansi_to_html(colorOutput);
            const lines = htmlOutput.split('\\n');
            let formattedOutput = '';
            let cleanText = '';

            lines.forEach(line => {
                let cleanedLine = line.replace(/--.*?\]/g, ']');
                const match = cleanedLine.match(/(\[.*?\])/g);
                if (match) {
                    match.forEach(timestamp => {
                        cleanedLine = cleanedLine.replace(timestamp, `<span class="timestamp">${timestamp}</span>`);
                    });
                    formattedOutput += `<div>${cleanedLine}</div>`;
                    cleanText += cleanedLine.replace(/<[^>]*>/g, '').replace(/(\[.*?\])/g, '') + '\n';
                } else {
                    formattedOutput += `<div>${cleanedLine}</div>`;
                    cleanText += cleanedLine.replace(/<[^>]*>/g, '') + '\n';
                }
            });

            document.getElementById('transcription-output').innerHTML = formattedOutput;
            document.getElementById('clean-text').value = cleanText.trim();

            const audioPlayer = document.getElementById('audio-player');
            const audioTimestamp = document.getElementById('audio-timestamp');

            audioPlayer.addEventListener('timeupdate', function() {
                const currentTime = audioPlayer.currentTime;
                const minutes = Math.floor(currentTime / 60);
                const seconds = Math.floor(currentTime % 60);
                const centiseconds = Math.floor((currentTime % 1) * 100);
                audioTimestamp.textContent = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}:${String(centiseconds).padStart(2, '0')}`;
            });

            document.getElementById('download-btn').addEventListener('click', function() {
                const text = document.getElementById('clean-text').value;
                const blob = new Blob([text], { type: 'text/plain' });
                const url = URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = 'transcripcion.txt';
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
                URL.revokeObjectURL(url);
            });
        });
    </script>
{% endblock %}